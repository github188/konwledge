1.angular数据双向绑定:
通过ng-model绑定 到视图层 （view）也就是 HTML 的标签中（DOM元素）;

在控制器层 （controller）可以通过$scope 给我们绑定的ng-model进行赋值和方法操作

我们在html中先定义一个angular的app,指定一个angular的controller,则该controller会对应于一个作用
域(可以用$scope前缀来指定作用域中的属性和方法等).则在该ngCtl的作用域内的HTML标签, 其值或者
操作都可以通过$scope的方式跟js中的属性和方法进行绑定. 


2 mvc 和 mvvm

MVC全名是Model View Controller，是模型(model)－视图(view)－控制器(controller)的缩写，
一种软件设计典范，用一种业务逻辑、数据、界面显示分离的方法组织代码，将业务逻辑聚集到
一个部件里面，在改进和个性化定制界面及用户交互的同时，不需要重新编写业务逻辑
。MVC被独特的发展起来用于映射传统的输入、处理和输出功能在一个逻辑的图形化用户界面的结构中

MVVM（Model-View-ViewModel）框架的由来便是MVP（Model-View-Presenter）模式与WPF结合的应用
方式时发展演变过来的一种新型架构框架。
它立足于原有MVP框架并且把WPF的新特性糅合进去，以应对客户日益复杂的需求变化。

3.angular 的缺点

Angular，当 watcher 越来越多时会变得越来越慢，因为作用域内的每一次变化，
所有 watcher 都要重新计算。并且，如果一些 watcher 触发另一个更新，
脏检查循环（digest cycle）可能要运行多次。 Angular 用户常常要使用深奥的技术，
以解决脏检查循环的问题。有时没有简单的办法来优化有大量 watcher 的作用域

4 路由:
前端构建单页面应用 (SPA) 必不可少的组成部分
single page application

概念:路由定义一个查找匹配的过程;
通过一系列的 路由规则(#) 进行查找匹配，匹配出一个符合条件的规则，
然后根据这个规则，进行数据的获取，以及页面的渲染。

//无页面刷新 缩短页面加载时间,提高性能

指令:
ngRoute
$routeProvider(服务提供者) --------- 对应于下面的urlRouterProvider和stateProvider
$route(服务) --------- 对应于下面的urlRouter和state
$routeParams(服务) --------- 对应于下面的stateParams 
ng-view(指令) --------- 对应于下面的ui-view

ui.router

$urlRouterProvider(服务提供者) --------- 用来配置路由重定向
$urlRouter(服务)
$stateProvider(服务提供者) --------- 用来配置路由
$state(服务) --------- 用来显示当前路由状态信息，以及一些路由方法（如：跳转）
$stateParams(服务) --------- 用来存储路由匹配时的参数
ui-view(指令) --------- 路由模板渲染，对应的dom相关联
ui-sref(指令)

5 ionic 缺点
比较依赖一些现成的cordova plugin，如果没有plugin那很多功能的代价就高了，甚至无法实现


界面间的跳转动画很难自定义


在有底部tab的情况下，list进入detail，想隐藏底部tab并使其不占位置，得单独做些处理，

6 ionic优点 和angular的优点

简单易用

强大的CLI，start->platform->serve->build->emulate->run，全套服务命令行完成，不用写配置文件，不用F5

组件多而强大

提供了很多强大的现成组件，很容易实现流行的交互效果，比如下拉刷新（ion-refresher）
、上拉加载/瀑布流（ion-infinite-scroll）、
tabs（ion-tabs）、侧边栏菜单（ion-side-menu）等等，
只需要写一点点代码，就能实现这些流行效果，比native开发速度快太多了

1. 模板功能强大丰富，并且是声明式的，自带了丰富的Angular指令；

2. 是一个比较完善的前端MV*框架，包含模板，数据双向绑定，路由，模块化，服务，过滤器，依赖注入等所有功能；

3. 自定义Directive，比jQuery插件还灵活，但是需要深入了解Directive的一些特性，简单的封装容易，
复杂一点官方没有提供详细的介绍文档，我们可以通过阅读源代码来找到某些我们需要的东西，如：在directive使用 $parse；

4. ng模块化比较大胆的引入了Java的一些东西（依赖注入），能够很容易的写出可复用的代码，
对于敏捷开发的团队来说非常有帮助，我们的项目从上线到目前，UI变化很大，在摸索中迭代产品，但是js的代码基本上很少改动。

5. 补充：Angular支持单元测试和e2e-testing。



